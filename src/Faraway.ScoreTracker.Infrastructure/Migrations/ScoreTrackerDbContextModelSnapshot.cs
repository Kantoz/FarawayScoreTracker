// <auto-generated />
using System;
using Faraway.ScoreTracker.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ScoreTracker.Infrastructure.Migrations
{
    [DbContext(typeof(ScoreTrackerDbContext))]
    partial class ScoreTrackerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("ScoreTracker.Infrastructure.Persistence.Models.GameRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PlayTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("ScoreTracker.Infrastructure.Persistence.Models.PlayerRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("ScoreTracker.Infrastructure.Persistence.Models.PlayerRegionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFaceUp")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Position")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("RegionId");

                    b.ToTable("PlayerRegions");
                });

            modelBuilder.Entity("ScoreTracker.Infrastructure.Persistence.Models.RegionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Area")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasHint")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Wonders")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("ScoreTracker.Infrastructure.Persistence.Models.ShrineRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Area")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasHint")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Wonders")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Shrines");
                });

            modelBuilder.Entity("ScoreTracker.Infrastructure.Persistence.Models.PlayerRecord", b =>
                {
                    b.HasOne("ScoreTracker.Infrastructure.Persistence.Models.GameRecord", "Game")
                        .WithMany("Players")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("ScoreTracker.Infrastructure.Persistence.Models.PlayerRegionRecord", b =>
                {
                    b.HasOne("ScoreTracker.Infrastructure.Persistence.Models.PlayerRecord", "Player")
                        .WithMany("PlayerRegions")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScoreTracker.Infrastructure.Persistence.Models.RegionRecord", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("ScoreTracker.Infrastructure.Persistence.Models.RegionRecord", b =>
                {
                    b.OwnsOne("ScoreTracker.Infrastructure.Persistence.Models.ScoringRuleRecord", "ScoringRule", b1 =>
                        {
                            b1.Property<Guid>("RegionRecordId")
                                .HasColumnType("TEXT");

                            b1.Property<int?>("ColorOne")
                                .HasColumnType("INTEGER");

                            b1.Property<int?>("ColorTwo")
                                .HasColumnType("INTEGER");

                            b1.Property<Guid>("Id")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Points")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Type")
                                .HasColumnType("INTEGER");

                            b1.HasKey("RegionRecordId");

                            b1.ToTable("Regions");

                            b1.WithOwner()
                                .HasForeignKey("RegionRecordId");
                        });

                    b.Navigation("ScoringRule");
                });

            modelBuilder.Entity("ScoreTracker.Infrastructure.Persistence.Models.ShrineRecord", b =>
                {
                    b.HasOne("ScoreTracker.Infrastructure.Persistence.Models.PlayerRecord", "Player")
                        .WithMany("Shrines")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ScoreTracker.Infrastructure.Persistence.Models.ScoringRuleRecord", "ScoringRule", b1 =>
                        {
                            b1.Property<Guid>("ShrineRecordId")
                                .HasColumnType("TEXT");

                            b1.Property<int?>("ColorOne")
                                .HasColumnType("INTEGER")
                                .HasColumnName("ScoringRule_ColorOne");

                            b1.Property<int?>("ColorTwo")
                                .HasColumnType("INTEGER")
                                .HasColumnName("ScoringRule_ColorTwo");

                            b1.Property<Guid>("Id")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Points")
                                .HasColumnType("INTEGER")
                                .HasColumnName("ScoringRule_Points");

                            b1.Property<int>("Type")
                                .HasColumnType("INTEGER")
                                .HasColumnName("ScoringRule_Type");

                            b1.HasKey("ShrineRecordId");

                            b1.ToTable("Shrines");

                            b1.WithOwner()
                                .HasForeignKey("ShrineRecordId");
                        });

                    b.Navigation("Player");

                    b.Navigation("ScoringRule");
                });

            modelBuilder.Entity("ScoreTracker.Infrastructure.Persistence.Models.GameRecord", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("ScoreTracker.Infrastructure.Persistence.Models.PlayerRecord", b =>
                {
                    b.Navigation("PlayerRegions");

                    b.Navigation("Shrines");
                });
#pragma warning restore 612, 618
        }
    }
}
